let minimist,version,help,configure,now,next;_489‍.x([["cli",()=>cli]]);_489‍.w("minimist",[["default",["minimist"],function(v){minimist=v}]]);_489‍.w("./version",[["version",["version"],function(v){version=v}]]);_489‍.w("./help",[["help",["help"],function(v){help=v}]]);_489‍.w("./configure",[["configure",["configure"],function(v){configure=v}]]);_489‍.w("./now",[["now",["now"],function(v){now=v}]]);_489‍.w("./next",[["next",["next"],function(v){next=v}]]);






       async function cli(argsArray) {
  const args = minimist(argsArray.slice(2));
  let cmd = args._[0] || 'help';
// if flag is --version or -v , gets npm version
  if (args.version || args.v) {
    cmd = 'version';
  }

  if (args.help || args.h) {
    cmd = 'help';
  }

  switch (cmd) {
    case 'version':
      version(args);
      break;

    case 'help':
      help(args);
      break;
    
    case 'config':
      configure(args);
      console.log("token accepted");
      break;

    case 'now':
      now(args);
      break;

    case 'next':
      next(args);
      break;

    default:
      console.error(`"${cmd}" is not a valid command!`);
      break;
  }
}